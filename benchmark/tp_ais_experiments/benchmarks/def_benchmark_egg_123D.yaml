targets:
    - name: egg
      type: distributions.CGaussianMixtureModel
      params: { means: [[-4.        ],
 [-1.33333333],
 [ 1.33333333],
 [ 4.        ]],
    sigmas: [[0.1],
 [0.1],
 [0.1],
 [0.1]],
    weights: [0.25,0.25,0.25,0.25],
    support: [[-5.],
 [ 5.]]}
      space_size: 5.0
      batch_size: 64
      nsamples: 2500
      nsamples_eval: 2000
      domain_min: np.array([-5.])
      domain_max: np.array([5.])
    - name: egg
      type: distributions.CGaussianMixtureModel
      params: { means: [[-4.        ,-4.        ],
 [-4.        ,-1.33333333],
 [-4.        , 1.33333333],
 [-4.        , 4.        ],
 [-1.33333333,-4.        ],
 [-1.33333333,-1.33333333],
 [-1.33333333, 1.33333333],
 [-1.33333333, 4.        ],
 [ 1.33333333,-4.        ],
 [ 1.33333333,-1.33333333],
 [ 1.33333333, 1.33333333],
 [ 1.33333333, 4.        ],
 [ 4.        ,-4.        ],
 [ 4.        ,-1.33333333],
 [ 4.        , 1.33333333],
 [ 4.        , 4.        ]],
    sigmas: [[0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1],
 [0.1,0.1]],
    weights: [0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,
 0.0625,0.0625,0.0625,0.0625,0.0625,0.0625],
    support: [[-5.,-5.],
 [ 5., 5.]]}
      space_size: 5.0
      batch_size: 128
      nsamples: 12500
      nsamples_eval: 2000
      domain_min: np.array([-5.,-5.])
      domain_max: np.array([5.,5.])
    - name: egg
      type: distributions.CGaussianMixtureModel
      params: { means: [[-4.        ,-4.        ,-4.        ],
 [-4.        ,-1.33333333,-4.        ],
 [-4.        , 1.33333333,-4.        ],
 [-4.        , 4.        ,-4.        ],
 [-1.33333333,-4.        ,-4.        ],
 [-1.33333333,-1.33333333,-4.        ],
 [-1.33333333, 1.33333333,-4.        ],
 [-1.33333333, 4.        ,-4.        ],
 [ 1.33333333,-4.        ,-4.        ],
 [ 1.33333333,-1.33333333,-4.        ],
 [ 1.33333333, 1.33333333,-4.        ],
 [ 1.33333333, 4.        ,-4.        ],
 [ 4.        ,-4.        ,-4.        ],
 [ 4.        ,-1.33333333,-4.        ],
 [ 4.        , 1.33333333,-4.        ],
 [ 4.        , 4.        ,-4.        ],
 [-4.        ,-4.        ,-1.33333333],
 [-4.        ,-1.33333333,-1.33333333],
 [-4.        , 1.33333333,-1.33333333],
 [-4.        , 4.        ,-1.33333333],
 [-1.33333333,-4.        ,-1.33333333],
 [-1.33333333,-1.33333333,-1.33333333],
 [-1.33333333, 1.33333333,-1.33333333],
 [-1.33333333, 4.        ,-1.33333333],
 [ 1.33333333,-4.        ,-1.33333333],
 [ 1.33333333,-1.33333333,-1.33333333],
 [ 1.33333333, 1.33333333,-1.33333333],
 [ 1.33333333, 4.        ,-1.33333333],
 [ 4.        ,-4.        ,-1.33333333],
 [ 4.        ,-1.33333333,-1.33333333],
 [ 4.        , 1.33333333,-1.33333333],
 [ 4.        , 4.        ,-1.33333333],
 [-4.        ,-4.        , 1.33333333],
 [-4.        ,-1.33333333, 1.33333333],
 [-4.        , 1.33333333, 1.33333333],
 [-4.        , 4.        , 1.33333333],
 [-1.33333333,-4.        , 1.33333333],
 [-1.33333333,-1.33333333, 1.33333333],
 [-1.33333333, 1.33333333, 1.33333333],
 [-1.33333333, 4.        , 1.33333333],
 [ 1.33333333,-4.        , 1.33333333],
 [ 1.33333333,-1.33333333, 1.33333333],
 [ 1.33333333, 1.33333333, 1.33333333],
 [ 1.33333333, 4.        , 1.33333333],
 [ 4.        ,-4.        , 1.33333333],
 [ 4.        ,-1.33333333, 1.33333333],
 [ 4.        , 1.33333333, 1.33333333],
 [ 4.        , 4.        , 1.33333333],
 [-4.        ,-4.        , 4.        ],
 [-4.        ,-1.33333333, 4.        ],
 [-4.        , 1.33333333, 4.        ],
 [-4.        , 4.        , 4.        ],
 [-1.33333333,-4.        , 4.        ],
 [-1.33333333,-1.33333333, 4.        ],
 [-1.33333333, 1.33333333, 4.        ],
 [-1.33333333, 4.        , 4.        ],
 [ 1.33333333,-4.        , 4.        ],
 [ 1.33333333,-1.33333333, 4.        ],
 [ 1.33333333, 1.33333333, 4.        ],
 [ 1.33333333, 4.        , 4.        ],
 [ 4.        ,-4.        , 4.        ],
 [ 4.        ,-1.33333333, 4.        ],
 [ 4.        , 1.33333333, 4.        ],
 [ 4.        , 4.        , 4.        ]],
    sigmas: [[0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1],
 [0.1,0.1,0.1]],
    weights: [0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,
 0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,
 0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,
 0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,
 0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,
 0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,
 0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,
 0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625,0.015625],
    support: [[-5.,-5.,-5.],
 [ 5., 5., 5.]]}
      space_size: 5.0
      batch_size: 1024
      nsamples: 62500
      nsamples_eval: 2000
      domain_min: np.array([-5.,-5.,-5.])
      domain_max: np.array([5.,5.,5.])
